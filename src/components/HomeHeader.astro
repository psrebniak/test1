---
import Section from './Section.astro';
---

<script defer>
  let textCanvas,
    textCtx,
    particlesCanvas,
    particlesCtx,
    width,
    height,
    textPixels,
    motionBtn,
    heading;
  let motionOff = false;
  const padding = 200;
  const particles = [];
  const increase = (Math.PI * 2) / 100;
  const colors = [
    '#FF1900',
    '#FF8800',
    '#FFCC00',
    '#FFFA00',
    '#D8FF00',
    '#B6FF00',
    '#00FF2E',
    '#00FFA5',
    '#00FFE1',
    '#00DDFF',
    '#057DFF',
    '#9800FF',
    '#D400FF',
    '#FF00E4',
    '#FF008C',
  ];
  let color = 0;
  const maxParticles = 5000;

  function addCanvases() {
    textCanvas = document.createElement('canvas');
    document.body.appendChild(textCanvas);
    textCtx = textCanvas.getContext('2d');
    particlesCanvas = document.createElement('canvas');
    document.body.appendChild(particlesCanvas);
    particlesCtx = particlesCanvas.getContext('2d');
    heading = document.getElementById('heading');
    textCanvas.style.position = 'absolute';
    const rect = heading.getBoundingClientRect();
    // console.log(rect);
    textCanvas.width = rect.width;
    textCanvas.height = rect.height;
    textCanvas.style.left = `${rect.x}px`;
    textCanvas.style.top = `${rect.y}px`;
    textCanvas.style.opacity = 0;
    textCanvas.style.pointerEvents = 'none';
    particlesCanvas.style.position = 'absolute';
    particlesCanvas.style.pointerEvents = 'none';
    textCtx.textAlign = 'left';
    textCtx.textBaseline = 'top';
    textCtx.font = '900 100px Chivo';
    textCtx.fillStyle = 'red';
    textCtx.fillText('OLEK', 46, -7);
    textCtx.fillText('WORKS', 15, 68);
  }

  function positionCanvas() {
    if (!heading) return;
    const rect = heading.getBoundingClientRect();
    width = rect.width;
    height = rect.height;
    particlesCanvas.width = rect.width + padding * 2;
    particlesCanvas.height = rect.height + padding * 2;
    particlesCanvas.style.left = `${rect.x + window.scrollX - padding}px`;
    particlesCanvas.style.top = `${rect.y + window.scrollY - padding}px`;
  }

  function getTextImageData() {
    const pix = textCtx.getImageData(0, 0, width, height).data;
    textPixels = [];
    for (var i = pix.length; i >= 0; i -= 4) {
      if (pix[i] != 0) {
        var x = (i / 4) % width;
        var y = Math.floor(Math.floor(i / width) / 4);

        if (x && x % 4 == 0 && y && y % 4 == 0)
          textPixels.push({
            x: x,
            y: y,
          });
      }
    }
  }

  function resetParticle(p) {
    p.x = p.startX;
    p.y = p.startY;
    p.counter = 0;
    p.color = colors[color];
  }

  function launchParticle(x, y) {
    const p = { x, y, startX: x, startY: y };
    p.speed = 0.6;
    p.waveSize = 5 + Math.random() * 5;
    p.counter = 0;
    p.color = colors[color];
    p.life = 4 + Math.random() * 6;
    particles.push(p);
  }

  function launchParticles(i) {
    const d = 20;
    for (var pi = i; pi < textPixels.length; pi += d) {
      launchParticle(
        textPixels[pi].x - 2 + padding,
        textPixels[pi].y - 2 + padding
      );
    }
    if (particles.length < maxParticles) {
      let ni = i + 1;
      if (ni > d) ni = 0;
      if (!motionOff) requestAnimationFrame(() => launchParticles(ni));
    }
  }

  function clearCanvas() {
    particlesCtx.clearRect(0, 0, width + padding * 2, width + padding * 2);
  }

  function animate() {
    clearCanvas();

    for (var i = 0; i < particles.length; i++) {
      const p = particles[i];
      particlesCtx.fillStyle = p.color;
      p.counter += increase;
      p.x += p.speed;
      p.y = p.y - (Math.sin(p.counter) / 25) * p.waveSize;
      p.y -= p.speed;

      particlesCtx.fillRect(p.x, p.y, 4, 4);

      if (p.counter > p.life) resetParticle(p);
    }

    if (!motionOff) requestAnimationFrame(animate);
  }

  function changeColor() {
    if (color === colors.length - 1) {
      color = 0;
    } else {
      color++;
    }
    setTimeout(changeColor, 700);
  }

  window.onload = function () {
    initMotionButton();

    document.fonts.ready.then(function () {
      initializeHeaderAnimation();
    });
  };

  function initializeHeaderAnimation() {
    addCanvases();
    positionCanvas();
    getTextImageData();
    if (!motionOff) startAnimation();
  }

  function startAnimation() {
    launchParticles(0);
    changeColor();
    animate();
  }

  window.onresize = function () {
    positionCanvas();
  };

  document.addEventListener('scroll', function () {
    positionCanvas();
  });

  function toggleMotion() {
    motionOff = !motionOff;
    if (motionOff) {
      motionBtn.innerHTML = 'Turn motion on';
    } else {
      motionBtn.innerHTML = 'Turn motion off';
      startAnimation();
    }
    if (window.localStorage) {
      window.localStorage.setItem('motion', motionOff ? 'off' : 'on');
    }
  }

  function initMotionButton() {
    motionBtn = document.getElementById('motion');
    if (window.localStorage) {
      if (window.localStorage.getItem('motion') == 'off') {
        motionOff = true;
        motionBtn.innerHTML = 'Turn motion on';
      }
    }
    motionBtn.addEventListener('click', () => {
      toggleMotion();
    });
  }
</script>

<style>
  h1.header {
    font-family: 'Chivo', sans-serif;
    font-weight: 900;
    font-size: 100px;
    width: 6ch;
    text-align: center;
    line-height: 0.75;
    margin: 0 auto;
    margin-top: 1.5em;
    position: relative;
    z-index: 100;
    text-transform: uppercase;
    margin-bottom: 0.7em;
  }

  .controls {
    text-align: right;
  }

  .controls button {
    padding: 0.2rem 0.5rem;
    border: 1px solid #444767;
    border-radius: 0.317rem;
    background-color: #fff;
    color: #444767;
    text-decoration: none;
  }

  a {
    position: relative;
    display: inline-block;
    color: #000;
    text-decoration: none;
    background-image: linear-gradient(
      90deg,
      hsl(6deg 100% 50%) 0%,
      hsl(29deg 100% 50%) 12%,
      hsl(45deg 100% 50%) 20%,
      hsl(59deg 100% 50%) 28%,
      hsl(80deg 100% 64%) 35%,
      hsl(117deg 100% 73%) 41%,
      hsl(159deg 100% 50%) 48%,
      hsl(183deg 100% 47%) 55%,
      hsl(197deg 100% 50%) 62%,
      hsl(211deg 100% 51%) 70%,
      hsl(266deg 77% 66%) 78%,
      hsl(310deg 70% 55%) 88%,
      hsl(327deg 100% 50%) 100%
    );
    background-repeat: no-repeat;
    background-size: 100% 0.15em;
    background-position: 0 88%;
    transition: background-size 0.2s ease-in-out;
  }

  a:hover {
    background-size: 100% 0.4em;
  }

  .cta {
    font-family: var(--mono-font);
    text-decoration: none;
    color: #222;
    font-size: 0.9em;
    display: inline-block;
    border: 4px solid #222;
    border-image: var(--rainbow-gradient-45);
    border-image-slice: 1 1 1 1;
    padding: 16px;
    position: relative;
    transition: transform 0.1s ease-in-out;
    transform: translate3d(0px, 0px, 0);
    transform-style: preserve-3d;
    padding: 14px 10px 10px 14px;
    transition: transform 0.2s ease-in-out, padding 0.2s ease-in-out;
    background-image: none;
    box-sizing: border-box;
    margin-right: 1em;
    margin-top: 1em;
  }

  .cta:hover {
    position: relative;
    transform: translate3d(3px, 3px, 0);
    padding: 12px;
  }

  .cta::before {
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    content: '';
    left: 0px;
    top: 0px;
    transform: translate3d(3px, 3px, -1px);
    background: #222;
    border: 4px solid #222;
    transition: transform 0.2s ease-in-out;
    background: none;
    box-sizing: content-box;
  }

  .cta:hover::before {
    transform: translate3d(-4px, -4px, -1px);
  }
</style>

<div class="controls"><button id="motion">Turn motion off</button></div>

<h1 id="heading" class="header">Olek works</h1>
<Section>
  <p>
    Hi üëãüèº </br>
    I'm Olek. Here I write about what matters to me.</br>
    I'm a co-founder of 2 kids üë®‚Äçüë©, married happily üíç, and üçï lover. My side-projects are: 
    <ul>
      <li>{' '}<a href="https://i.getdifree.com/ezlj">Difree</a>{' '} a distraction-free writing app,</li>
      <li>and {' '}<a href="https://domowa.pizza">domowa.pizza</a>{' '} a blog about home-made pizza.</li>
    </ul>
  </p>
  <p style="min-height: 80px;">
    <a class="cta" href="/all-notes/"> See all the notes</a>&nbsp;
    <a
      class="cta"
      href="https://olek.works/rss/"
    >
      RSS Feed
    </a>
  </p>
</Section>
